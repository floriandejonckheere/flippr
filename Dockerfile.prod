FROM node:22-alpine AS build

ENV APP_HOME=/app
WORKDIR $APP_HOME/

# Install dependencies
RUN apk add --no-cache postgresql-client

# Install PNPM
ENV COREPACK_INTEGRITY_KEYS=0
RUN corepack enable && corepack prepare pnpm --activate

# Install NPM dependencies
ADD package.json $APP_HOME/
ADD pnpm-lock.yaml $APP_HOME/

RUN pnpm install --prod --frozen-lockfile

# Add web application
ADD . $APP_HOME/

# Build web application
RUN pnpm build

FROM node:22-alpine AS production

ENV APP_HOME=/app
WORKDIR $APP_HOME/

# Copy dependencies from build stage
COPY --from=build $APP_HOME/node_modules $APP_HOME/node_modules

# Copy web application from build stage
COPY --from=build $APP_HOME/build $APP_HOME/

# Copy package.json
COPY --from=build $APP_HOME/package.json $APP_HOME/

# Copy Drizzle configuration, schema, and migrations
COPY --from=build $APP_HOME/drizzle.config.ts $APP_HOME/
COPY --from=build $APP_HOME/src/lib/server/db/schema.ts $APP_HOME/src/lib/server/db/schema.ts
COPY --from=build $APP_HOME/drizzle $APP_HOME/drizzle

# Run web application
CMD ["sh", "-c", "npx drizzle-kit push --verbose --force && node ."]
